@model MVC.Models.AddQuotaViewModel
@{
    ViewData["Title"] = "Quota Management";
}

<!-- Admin header with logout -->
<div class="row">
    <div class="col-md-12">
        <div class="card card-heso">
            <div class="card-header card-header-heso">
                <div class="d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">
                        <i class="fas fa-cog"></i> Administrative Panel - Quota Management
                    </h4>
                    <div class="text-end">
                        <small>Logged in as: <strong>@ViewBag.AdminUsername</strong></small>
                        <br>
                        <a href="@Url.Action("Logout")" class="text-white text-decoration-none">
                            <small><i class="fas fa-sign-out-alt"></i> Logout</small>
                        </a>
                    </div>
                </div>
            </div>
            <div class="card-body p-4">

                <!-- Message display area -->
                <div style="min-height: 60px;">
                    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
                    {
                        <div class="alert alert-heso-success">
                            <i class="fas fa-check-circle"></i> @Model.SuccessMessage
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                    {
                        <div class="alert alert-heso-error">
                            <i class="fas fa-exclamation-triangle"></i> @Model.ErrorMessage
                        </div>
                    }
                </div>

                <div class="row">
                    <!-- Add Quota Form -->
                    <div class="col-md-6">
                        <div class="card border-primary mb-4">
                            <div class="card-header bg-primary text-white">
                                <h5 class="mb-0"><i class="fas fa-plus-circle"></i> Add Semester Quota</h5>
                            </div>
                            <div class="card-body">
                                <form asp-action="AddQuota" method="post">
                                    <div class="mb-3">
                                        <label asp-for="Username" class="form-label">
                                            <i class="fas fa-user"></i> Username *
                                        </label>
                                        <input asp-for="Username" class="form-control form-control-lg"
                                               placeholder="e.g. SCoppey, JDupont, AMartin" autocomplete="off" />
                                        <div style="min-height: 20px;">
                                            @if (ViewContext.ViewData.ModelState.ContainsKey("Username"))
                                            {
                                                <span asp-validation-for="Username" class="text-danger small"></span>
                                            }
                                        </div>
                                    </div>

                                    <div class="mb-3">
                                        <label asp-for="Amount" class="form-label">
                                            <i class="fas fa-coins"></i> Amount (CHF) *
                                        </label>
                                        <div class="input-group">
                                            <input asp-for="Amount" type="number" min="1" max="1000" step="1"
                                                   class="form-control form-control-lg"
                                                   placeholder="50" style="font-size: 1.1rem;" />
                                            <span class="input-group-text">CHF</span>
                                        </div>
                                        <div style="min-height: 20px;">
                                            @if (ViewContext.ViewData.ModelState.ContainsKey("Amount"))
                                            {
                                                <span asp-validation-for="Amount" class="text-danger small"></span>
                                            }
                                        </div>
                                    </div>

                                    <!-- Live page calculation -->
                                    <div class="mb-3">
                                        <div class="text-center p-2 bg-light rounded">
                                            <small class="text-muted d-block">Equivalent:</small>
                                            <strong id="page-calculation" class="text-primary fs-5">0</strong>
                                            <small class="text-muted d-block">pages</small>
                                        </div>
                                    </div>

                                    <div class="d-grid">
                                        <button type="submit" class="btn btn-heso-primary btn-lg">
                                            <i class="fas fa-plus-circle"></i> Add Quota
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>

                    <!-- User Balance Overview -->
                    <div class="col-md-6">
                        <div class="card border-success mb-4">
                            <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
                                <h5 class="mb-0"><i class="fas fa-users-cog"></i> Check User Balance</h5>
                                <button type="button" class="btn btn-light btn-sm" id="refreshUsersBtn">
                                    <i class="fas fa-sync-alt"></i> Refresh
                                </button>
                            </div>
                            <div class="card-body p-0">
                                <div id="usersLoading" class="text-center p-3" style="display: none;">
                                    <i class="fas fa-spinner fa-spin"></i> Loading users...
                                </div>

                                <!-- User table display -->
                                @if (ViewBag.UsersError != null)
                                {
                                    <div class="alert alert-danger m-3">
                                        <i class="fas fa-exclamation-triangle"></i> Error loading users: @ViewBag.UsersError
                                    </div>
                                }
                                else if (ViewBag.Users != null)
                                {
                                    <div id="usersTableContainer">
                                        <div class="table-responsive">
                                            <table class="table table-striped table-hover mb-0">
                                                <thead class="table-success">
                                                    <tr>
                                                        <th>Username</th>
                                                        <th>Role</th>
                                                        <th>Quota</th>
                                                        <th>Balance</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var user in (List<MVC.Services.UserInfo>)ViewBag.Users)
                                                    {
                                                        <tr>
                                                            <td>
                                                                <strong>@user.Username</strong>
                                                                <br><small class="text-muted">@user.FullName</small>
                                                            </td>
                                                            <td>
                                                                @if (user.Role == "Admin")
                                                                {
                                                                    <span class="badge bg-warning text-dark">Admin</span>
                                                                }
                                                                else
                                                                {
                                                                    <span class="badge bg-info">Student</span>
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (user.HasQuota)
                                                                {
                                                                    <span class="badge bg-success">Yes</span>
                                                                }
                                                                else
                                                                {
                                                                    <span class="badge bg-secondary">No</span>
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (user.HasQuota)
                                                                {
                                                                    <strong class="text-success">@user.Balance.ToString("F2") CHF</strong>
                                                                    <br>
                                                                    <small class="text-muted">@((int)(user.Balance / 0.08)) pages</small>
                                                                }
                                                                else
                                                                {
                                                                    <span class="text-muted">-</span>
                                                                }
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-info m-3">
                                        <i class="fas fa-info-circle"></i> No users loaded. Please refresh to load user data.
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Real-time CHF to pages conversion
        function updatePageCalculation() {
            const amount = parseInt(document.getElementById('Amount').value) || 0;
            const pages = Math.floor(amount / 0.08);
            document.getElementById('page-calculation').textContent = pages;
        }

        document.getElementById('Amount').addEventListener('input', updatePageCalculation);
        document.addEventListener('DOMContentLoaded', updatePageCalculation);

        // AJAX user list refresh
        document.getElementById('refreshUsersBtn').addEventListener('click', async function() {
            const loading = document.getElementById('usersLoading');
            const tableContainer = document.getElementById('usersTableContainer');
            const btn = this;

            loading.style.display = 'block';
            if (tableContainer) tableContainer.style.display = 'none';
            btn.disabled = true;

            try {
                const response = await fetch('@Url.Action("RefreshUsers")');
                const data = await response.json();

                loading.style.display = 'none';

                if (data.success && data.users) {
                    // Rebuild user table dynamically
                    let html = '<div class="table-responsive">';
                    html += '<table class="table table-striped table-hover mb-0">';
                    html += '<thead class="table-success">';
                    html += '<tr><th>Username</th><th>Role</th><th>Quota</th><th>Balance</th></tr>';
                    html += '</thead><tbody>';

                    data.users.forEach(user => {
                        const roleColor = user.role === 'Admin' ? 'bg-warning text-dark' : 'bg-info';
                        const quotaStatus = user.hasQuota ?
                            '<span class="badge bg-success">Yes</span>' :
                            '<span class="badge bg-secondary">No</span>';

                        const balanceDisplay = user.hasQuota ?
                            `<strong class="text-success">${user.balance.toFixed(2)} CHF</strong><br><small class="text-muted">${Math.floor(user.balance / 0.08)} pages</small>` :
                            '<span class="text-muted">-</span>';

                        html += '<tr>';
                        html += `<td><strong>${user.username}</strong><br><small class="text-muted">${user.fullName}</small></td>`;
                        html += `<td><span class="badge ${roleColor}">${user.role}</span></td>`;
                        html += `<td>${quotaStatus}</td>`;
                        html += `<td>${balanceDisplay}</td>`;
                        html += '</tr>';
                    });

                    html += '</tbody></table></div>';

                    if (tableContainer) {
                        tableContainer.innerHTML = html;
                        tableContainer.style.display = 'block';
                    }
                } else {
                    console.error('Failed to refresh users:', data.message);
                    alert('Failed to refresh users: ' + (data.message || 'Unknown error'));
                }
            } catch (error) {
                loading.style.display = 'none';
                console.error('Error refreshing users:', error);
                alert('Error refreshing users: ' + error.message);
            }

            btn.disabled = false;
        });
    </script>
}